#profile potados


#macro TEST_ADD_FPU(VALA, VALB, EXPECTED) 
    inc reg[5]
    mov reg[1], VALA
    mov reg[2], VALB
    mov reg[4], EXPECTED

    fadd reg[3], reg[1], reg[2]

    jne reg[3], reg[4], FAILED
#endmacro

#macro TEST_SUB_FPU(VALA, VALB, EXPECTED) 
    inc reg[5]
    mov reg[1], VALA
    mov reg[2], VALB
    mov reg[4], EXPECTED

    fsub reg[3], reg[1], reg[2]

    jne reg[3], reg[4], FAILED
#endmacro


#macro TEST_MUL_FPU(VALA, VALB, EXPECTED, FAIL) 
    inc reg[5]
    mov reg[1], VALA
    mov reg[2], VALB
    mov reg[4], EXPECTED

    fmul reg[3], reg[1], reg[2]
FAIL:
    jne reg[3], reg[4], FAIL
#endmacro

#define MUL3

.CORE0 
mov reg[5], 0

#ifdef PART1
TEST_ADD_FPU(0x3c00, 0x3c00, 0x4000)
TEST_ADD_FPU(0x4200, 0x3c00, 0x4400)
TEST_ADD_FPU(0x4000, 0x3c00, 0x4200)
TEST_ADD_FPU(0x4200, 0x4000, 0x4500)
TEST_ADD_FPU(0x4400, 0x4a00, 0x4c00)
TEST_ADD_FPU(0x3a00, 0x4a00, 0x4a60)
TEST_ADD_FPU(0x0000, 0x0000, 0x0000)
TEST_ADD_FPU(0x0000, 0x2f1c, 0x2f1c)
TEST_ADD_FPU(0x0000, 0x331c, 0x331c)
TEST_ADD_FPU(0x0000, 0x3555, 0x3555)
TEST_ADD_FPU(0x0000, 0x371c, 0x371c)
TEST_ADD_FPU(0x0000, 0x3871, 0x3871)
TEST_ADD_FPU(0x0000, 0x3955, 0x3955)
TEST_ADD_FPU(0x0000, 0x3a38, 0x3a38)
TEST_ADD_FPU(0x0000, 0x3b1c, 0x3b1c)
TEST_ADD_FPU(0x0000, 0x3c00, 0x3c00)
#endif

#ifdef PART2
TEST_ADD_FPU(0x2f1c, 0x0000, 0x2f1c)
TEST_ADD_FPU(0x2f1c, 0x2f1c, 0x331c)
TEST_ADD_FPU(0x2f1c, 0x331c, 0x3555)
TEST_ADD_FPU(0x2f1c, 0x3555, 0x371c)
TEST_ADD_FPU(0x2f1c, 0x371c, 0x3871)
TEST_ADD_FPU(0x2f1c, 0x3871, 0x3954)
TEST_ADD_FPU(0x2f1c, 0x3955, 0x3a38)
TEST_ADD_FPU(0x2f1c, 0x3a38, 0x3b1b)
TEST_ADD_FPU(0x2f1c, 0x3b1c, 0x3bff)
TEST_ADD_FPU(0x2f1c, 0x3c00, 0x3c71)
TEST_ADD_FPU(0x331c, 0x0000, 0x331c)
TEST_ADD_FPU(0x331c, 0x2f1c, 0x3555)
TEST_ADD_FPU(0x331c, 0x331c, 0x371c)
TEST_ADD_FPU(0x331c, 0x3555, 0x3871)
TEST_ADD_FPU(0x331c, 0x371c, 0x3955)
TEST_ADD_FPU(0x331c, 0x3871, 0x3a38)
#endif

#ifdef PART3
TEST_ADD_FPU(0x331c, 0x3955, 0x3b1c)
TEST_ADD_FPU(0x331c, 0x3a38, 0x3bff)
TEST_ADD_FPU(0x331c, 0x3b1c, 0x3c71)
TEST_ADD_FPU(0x331c, 0x3c00, 0x3ce3)
TEST_ADD_FPU(0x3555, 0x0000, 0x3555)
TEST_ADD_FPU(0x3555, 0x2f1c, 0x371c)
TEST_ADD_FPU(0x3555, 0x331c, 0x3871)
TEST_ADD_FPU(0x3555, 0x3555, 0x3955)
TEST_ADD_FPU(0x3555, 0x371c, 0x3a38)
TEST_ADD_FPU(0x3555, 0x3871, 0x3b1b)
TEST_ADD_FPU(0x3555, 0x3955, 0x3bff)
TEST_ADD_FPU(0x3555, 0x3a38, 0x3c71)
TEST_ADD_FPU(0x3555, 0x3b1c, 0x3ce3)
TEST_ADD_FPU(0x3555, 0x3c00, 0x3d55)
TEST_ADD_FPU(0x371c, 0x0000, 0x371c)
TEST_ADD_FPU(0x371c, 0x2f1c, 0x3871)
#endif

#ifdef PART4
TEST_ADD_FPU(0x371c, 0x331c, 0x3955)
TEST_ADD_FPU(0x371c, 0x3555, 0x3a38)
TEST_ADD_FPU(0x371c, 0x371c, 0x3b1c)
TEST_ADD_FPU(0x371c, 0x3871, 0x3bff)
TEST_ADD_FPU(0x371c, 0x3955, 0x3c71)
TEST_ADD_FPU(0x371c, 0x3a38, 0x3ce3)
TEST_ADD_FPU(0x371c, 0x3b1c, 0x3d55)
TEST_ADD_FPU(0x371c, 0x3c00, 0x3dc7)
TEST_ADD_FPU(0x3871, 0x0000, 0x3871)
TEST_ADD_FPU(0x3871, 0x2f1c, 0x3954)
TEST_ADD_FPU(0x3871, 0x331c, 0x3a38)
TEST_ADD_FPU(0x3871, 0x3555, 0x3b1b)
TEST_ADD_FPU(0x3871, 0x371c, 0x3bff)
TEST_ADD_FPU(0x3871, 0x3871, 0x3c71)
TEST_ADD_FPU(0x3871, 0x3955, 0x3ce3)
TEST_ADD_FPU(0x3871, 0x3a38, 0x3d54)
#endif

#ifdef PART5
TEST_ADD_FPU(0x3871, 0x3b1c, 0x3dc6)
TEST_ADD_FPU(0x3871, 0x3c00, 0x3e38)
TEST_ADD_FPU(0x3955, 0x0000, 0x3955)
TEST_ADD_FPU(0x3955, 0x2f1c, 0x3a38)
TEST_ADD_FPU(0x3955, 0x331c, 0x3b1c)
TEST_ADD_FPU(0x3955, 0x3555, 0x3bff)
TEST_ADD_FPU(0x3955, 0x371c, 0x3c71)
TEST_ADD_FPU(0x3955, 0x3871, 0x3ce3)
TEST_ADD_FPU(0x3955, 0x3955, 0x3d55)
TEST_ADD_FPU(0x3955, 0x3a38, 0x3dc6)
TEST_ADD_FPU(0x3955, 0x3b1c, 0x3e38)
TEST_ADD_FPU(0x3955, 0x3c00, 0x3eaa)
TEST_ADD_FPU(0x3a38, 0x0000, 0x3a38)
TEST_ADD_FPU(0x3a38, 0x2f1c, 0x3b1b)
TEST_ADD_FPU(0x3a38, 0x331c, 0x3bff)
TEST_ADD_FPU(0x3a38, 0x3555, 0x3c71)
#endif

#ifdef PART6
TEST_ADD_FPU(0x3a38, 0x371c, 0x3ce3)
TEST_ADD_FPU(0x3a38, 0x3871, 0x3d54)
TEST_ADD_FPU(0x3a38, 0x3955, 0x3dc6)
TEST_ADD_FPU(0x3a38, 0x3a38, 0x3e38)
TEST_ADD_FPU(0x3a38, 0x3b1c, 0x3eaa)
TEST_ADD_FPU(0x3a38, 0x3c00, 0x3f1c)
TEST_ADD_FPU(0x3b1c, 0x0000, 0x3b1c)
TEST_ADD_FPU(0x3b1c, 0x2f1c, 0x3bff)
TEST_ADD_FPU(0x3b1c, 0x331c, 0x3c71)
TEST_ADD_FPU(0x3b1c, 0x3555, 0x3ce3)
TEST_ADD_FPU(0x3b1c, 0x371c, 0x3d55)
TEST_ADD_FPU(0x3b1c, 0x3871, 0x3dc6)
TEST_ADD_FPU(0x3b1c, 0x3955, 0x3e38)
TEST_ADD_FPU(0x3b1c, 0x3a38, 0x3eaa)
TEST_ADD_FPU(0x3b1c, 0x3b1c, 0x3f1c)
TEST_ADD_FPU(0x3b1c, 0x3c00, 0x3f8e)
TEST_ADD_FPU(0x3c00, 0x0000, 0x3c00)
TEST_ADD_FPU(0x3c00, 0x2f1c, 0x3c71)
TEST_ADD_FPU(0x3c00, 0x331c, 0x3ce3)
TEST_ADD_FPU(0x3c00, 0x3555, 0x3d55)
TEST_ADD_FPU(0x3c00, 0x371c, 0x3dc7)
TEST_ADD_FPU(0x3c00, 0x3871, 0x3e38)
TEST_ADD_FPU(0x3c00, 0x3955, 0x3eaa)
TEST_ADD_FPU(0x3c00, 0x3a38, 0x3f1c)
TEST_ADD_FPU(0x3c00, 0x3b1c, 0x3f8e)
TEST_ADD_FPU(0x3c00, 0x3c00, 0x4000)
TEST_ADD_FPU(0x3c00, 0x3c00, 0x4000)
TEST_ADD_FPU(0x3c00, 0x4280, 0x4440)
TEST_ADD_FPU(0x3c00, 0x4580, 0x4680)
TEST_ADD_FPU(0x3c00, 0x47c0, 0x4860)
TEST_ADD_FPU(0x3c00, 0x4900, 0x4980)
TEST_ADD_FPU(0x4280, 0x3c00, 0x4440)
TEST_ADD_FPU(0x4280, 0x4280, 0x4680)
TEST_ADD_FPU(0x4280, 0x4580, 0x4860)
TEST_ADD_FPU(0x4280, 0x47c0, 0x4980)
TEST_ADD_FPU(0x4280, 0x4900, 0x4aa0)
TEST_ADD_FPU(0x4580, 0x3c00, 0x4680)
TEST_ADD_FPU(0x4580, 0x4280, 0x4860)
TEST_ADD_FPU(0x4580, 0x4580, 0x4980)
TEST_ADD_FPU(0x4580, 0x47c0, 0x4aa0)
TEST_ADD_FPU(0x4580, 0x4900, 0x4bc0)
TEST_ADD_FPU(0x47c0, 0x3c00, 0x4860)
TEST_ADD_FPU(0x47c0, 0x4280, 0x4980)
TEST_ADD_FPU(0x47c0, 0x4580, 0x4aa0)
TEST_ADD_FPU(0x47c0, 0x47c0, 0x4bc0)
TEST_ADD_FPU(0x47c0, 0x4900, 0x4c70)
TEST_ADD_FPU(0x4900, 0x3c00, 0x4980)
TEST_ADD_FPU(0x4900, 0x4280, 0x4aa0)
TEST_ADD_FPU(0x4900, 0x4580, 0x4bc0)
TEST_ADD_FPU(0x4900, 0x47c0, 0x4c70)
TEST_ADD_FPU(0x4900, 0x4900, 0x4d00)
TEST_ADD_FPU(0x55a0, 0x3c00, 0x55b0)
TEST_ADD_FPU(0x55a0, 0x4280, 0x55d4)
TEST_ADD_FPU(0x55a0, 0x4580, 0x55f8)
TEST_ADD_FPU(0x55a0, 0x47c0, 0x561c)
TEST_ADD_FPU(0x55a0, 0x4900, 0x5640)
TEST_ADD_FPU(0x55c8, 0x3c00, 0x55d8)
TEST_ADD_FPU(0x55c8, 0x4280, 0x55fc)
TEST_ADD_FPU(0x55c8, 0x4580, 0x5620)
TEST_ADD_FPU(0x55c8, 0x47c0, 0x5644)
TEST_ADD_FPU(0x55c8, 0x4900, 0x5668)
TEST_ADD_FPU(0x55f0, 0x3c00, 0x5600)
TEST_ADD_FPU(0x55f0, 0x4280, 0x5624)
TEST_ADD_FPU(0x55f0, 0x4580, 0x5648)
TEST_ADD_FPU(0x55f0, 0x47c0, 0x566c)
TEST_ADD_FPU(0x55f0, 0x4900, 0x5690)
TEST_ADD_FPU(0x5618, 0x3c00, 0x5628)
TEST_ADD_FPU(0x5618, 0x4280, 0x564c)
TEST_ADD_FPU(0x5618, 0x4580, 0x5670)
TEST_ADD_FPU(0x5618, 0x47c0, 0x5694)
TEST_ADD_FPU(0x5618, 0x4900, 0x56b8)
TEST_ADD_FPU(0x5640, 0x3c00, 0x5650)
TEST_ADD_FPU(0x5640, 0x4280, 0x5674)
TEST_ADD_FPU(0x5640, 0x4580, 0x5698)
TEST_ADD_FPU(0x5640, 0x47c0, 0x56bc)
TEST_ADD_FPU(0x5640, 0x4900, 0x56e0)
TEST_ADD_FPU(0x3c00, 0x3c00, 0x0000)
TEST_ADD_FPU(0x3c00, 0x4000, 0xbc00)
TEST_ADD_FPU(0x3c00, 0x4200, 0xc000)
TEST_ADD_FPU(0x3c00, 0x4400, 0xc200)
TEST_ADD_FPU(0x3c00, 0x4500, 0xc400)
TEST_ADD_FPU(0x4000, 0x3c00, 0x3c00)
TEST_ADD_FPU(0x4000, 0x4000, 0x0000)
TEST_ADD_FPU(0x4000, 0x4200, 0xbc00)
TEST_ADD_FPU(0x4000, 0x4400, 0xc000)
TEST_ADD_FPU(0x4000, 0x4500, 0xc200)
TEST_ADD_FPU(0x4200, 0x3c00, 0x4000)
TEST_ADD_FPU(0x4200, 0x4000, 0x3c00)
TEST_ADD_FPU(0x4200, 0x4200, 0x0000)
TEST_ADD_FPU(0x4200, 0x4400, 0xbc00)
TEST_ADD_FPU(0x4200, 0x4500, 0xc000)
TEST_ADD_FPU(0x4400, 0x3c00, 0x4200)
TEST_ADD_FPU(0x4400, 0x4000, 0x4000)
TEST_ADD_FPU(0x4400, 0x4200, 0x3c00)
TEST_ADD_FPU(0x4400, 0x4400, 0x0000)
TEST_ADD_FPU(0x4400, 0x4500, 0xbc00)
TEST_ADD_FPU(0x4500, 0x3c00, 0x4400)
TEST_ADD_FPU(0x4500, 0x4000, 0x4200)
TEST_ADD_FPU(0x4500, 0x4200, 0x4000)
TEST_ADD_FPU(0x4500, 0x4400, 0x3c00)
TEST_ADD_FPU(0x4500, 0x4500, 0x0000)
TEST_ADD_FPU(0xc500, 0xc500, 0xc900)
TEST_ADD_FPU(0xc500, 0xc100, 0xc780)
TEST_ADD_FPU(0xc500, 0x0000, 0xc500)
TEST_ADD_FPU(0xc500, 0x4100, 0xc100)
TEST_ADD_FPU(0xc100, 0xc500, 0xc780)
TEST_ADD_FPU(0xc100, 0xc100, 0xc500)
TEST_ADD_FPU(0xc100, 0x0000, 0xc100)
TEST_ADD_FPU(0xc100, 0x4500, 0x4100)
TEST_ADD_FPU(0x0000, 0xc500, 0xc500)
TEST_ADD_FPU(0x0000, 0xc100, 0xc100)
TEST_ADD_FPU(0x0000, 0x4100, 0x4100)
TEST_ADD_FPU(0x0000, 0x4500, 0x4500)
TEST_ADD_FPU(0x4100, 0xc500, 0xc100)
TEST_ADD_FPU(0x4100, 0x0000, 0x4100)
TEST_ADD_FPU(0x4100, 0x4100, 0x4500)
TEST_ADD_FPU(0x4100, 0x4500, 0x4780)
TEST_ADD_FPU(0x4500, 0xc100, 0x4100)
TEST_ADD_FPU(0x4500, 0x0000, 0x4500)
TEST_ADD_FPU(0x4500, 0x4100, 0x4780)
TEST_ADD_FPU(0x4500, 0x4500, 0x4900)
#endif

#ifdef SUB1
TEST_SUB_FPU(0x3c00, 0x3c00, 0x0000)
TEST_SUB_FPU(0x3c00, 0x4000, 0xbc00)
TEST_SUB_FPU(0x3c00, 0x4200, 0xc000)
TEST_SUB_FPU(0x3c00, 0x4400, 0xc200)
TEST_SUB_FPU(0x3c00, 0x4500, 0xc400)
TEST_SUB_FPU(0x4000, 0x3c00, 0x3c00)
TEST_SUB_FPU(0x4000, 0x4000, 0x0000)
TEST_SUB_FPU(0x4000, 0x4200, 0xbc00)
TEST_SUB_FPU(0x4000, 0x4400, 0xc000)
TEST_SUB_FPU(0x4000, 0x4500, 0xc200)
TEST_SUB_FPU(0x4200, 0x3c00, 0x4000)
TEST_SUB_FPU(0x4200, 0x4000, 0x3c00)
TEST_SUB_FPU(0x4200, 0x4200, 0x0000)
TEST_SUB_FPU(0x4200, 0x4400, 0xbc00)
TEST_SUB_FPU(0x4200, 0x4500, 0xc000)
TEST_SUB_FPU(0x4400, 0x3c00, 0x4200)
#endif

#ifdef SUB2
TEST_SUB_FPU(0x4400, 0x4000, 0x4000)
TEST_SUB_FPU(0x4400, 0x4200, 0x3c00)
TEST_SUB_FPU(0x4400, 0x4400, 0x0000)
TEST_SUB_FPU(0x4400, 0x4500, 0xbc00)
TEST_SUB_FPU(0x4500, 0x3c00, 0x4400)
TEST_SUB_FPU(0x4500, 0x4000, 0x4200)
TEST_SUB_FPU(0x4500, 0x4200, 0x4000)
TEST_SUB_FPU(0x4500, 0x4400, 0x3c00)
TEST_SUB_FPU(0x4500, 0x4500, 0x0000)
#endif


#ifdef MUL1
TEST_MUL_FPU(0x3800, 0x3800, 0x3400, FAIL_1)
TEST_MUL_FPU(0x3800, 0x4100, 0x3d00, FAIL_2)
TEST_MUL_FPU(0x3800, 0x3d00, 0x3900, FAIL_3)
TEST_MUL_FPU(0x3800, 0x3e00, 0x3a00, FAIL_4)
TEST_MUL_FPU(0x3800, 0x3c40, 0x3840, FAIL_5)
TEST_MUL_FPU(0x4100, 0x3800, 0x3d00, FAIL_6)
TEST_MUL_FPU(0x4100, 0x4100, 0x4640, FAIL_7)
TEST_MUL_FPU(0x4100, 0x3d00, 0x4240, FAIL_8)
TEST_MUL_FPU(0x4100, 0x3e00, 0x4380, FAIL_9)
TEST_MUL_FPU(0x4100, 0x3c40, 0x4150, FAIL_10)
TEST_MUL_FPU(0x3d00, 0x3800, 0x3900, FAIL_11)
TEST_MUL_FPU(0x3d00, 0x4100, 0x4240, FAIL_12)
TEST_MUL_FPU(0x3d00, 0x3d00, 0x3e40, FAIL_13)
TEST_MUL_FPU(0x3d00, 0x3e00, 0x3f80, FAIL_14)
TEST_MUL_FPU(0x3d00, 0x3c40, 0x3d50, FAIL_15)
TEST_MUL_FPU(0x3e00, 0x3800, 0x3a00, FAIL_16)
TEST_MUL_FPU(0x3e00, 0x4100, 0x4380, FAIL_17)
TEST_MUL_FPU(0x3e00, 0x3d00, 0x3f80, FAIL_18)
TEST_MUL_FPU(0x3e00, 0x3e00, 0x4080, FAIL_19)
TEST_MUL_FPU(0x3e00, 0x3c40, 0x3e60, FAIL_20)
TEST_MUL_FPU(0x3c40, 0x3800, 0x3840, FAIL_21)
TEST_MUL_FPU(0x3c40, 0x4100, 0x4150, FAIL_22)
TEST_MUL_FPU(0x3c40, 0x3d00, 0x3d50, FAIL_23)
TEST_MUL_FPU(0x3c40, 0x3e00, 0x3e60, FAIL_24)
TEST_MUL_FPU(0x3c40, 0x3c40, 0x3c84, FAIL_25)
#endif

#ifdef MUL3
TEST_MUL_FPU(0xcc00, 0xcc00, 0x5c00, FAIL_MUL_HARD_1)
TEST_MUL_FPU(0xcc00, 0xc840, 0x5840, FAIL_MUL_HARD_2)
TEST_MUL_FPU(0xcc00, 0xc100, 0x5100, FAIL_MUL_HARD_3)
TEST_MUL_FPU(0xcc00, 0x0000, 0x0000, FAIL_MUL_HARD_4)
TEST_MUL_FPU(0xcc00, 0x3d00, 0xcd00, FAIL_MUL_HARD_5)
TEST_MUL_FPU(0xcc00, 0x4220, 0xd220, FAIL_MUL_HARD_6)
TEST_MUL_FPU(0xc840, 0xcc00, 0x5840, FAIL_MUL_HARD_7)
TEST_MUL_FPU(0xc840, 0xc840, 0x5484, FAIL_MUL_HARD_8)
TEST_MUL_FPU(0xc840, 0xc100, 0x4d50, FAIL_MUL_HARD_9)
TEST_MUL_FPU(0xc840, 0x0000, 0x0000, FAIL_MUL_HARD_10)
TEST_MUL_FPU(0xc840, 0x3d00, 0xc950, FAIL_MUL_HARD_11)
TEST_MUL_FPU(0xc840, 0x4220, 0xce82, FAIL_MUL_HARD_12)
TEST_MUL_FPU(0xc100, 0xcc00, 0x5100, FAIL_MUL_HARD_13)
TEST_MUL_FPU(0xc100, 0xc840, 0x4d50, FAIL_MUL_HARD_14)
TEST_MUL_FPU(0xc100, 0xc100, 0x4640, FAIL_MUL_HARD_15)
TEST_MUL_FPU(0xc100, 0x0000, 0x0000, FAIL_MUL_HARD_16)
TEST_MUL_FPU(0xc100, 0x3d00, 0xc240, FAIL_MUL_HARD_17)
TEST_MUL_FPU(0xc100, 0x4220, 0xc7a8, FAIL_MUL_HARD_18)
TEST_MUL_FPU(0x0000, 0xcc00, 0x0000, FAIL_MUL_HARD_19)
TEST_MUL_FPU(0x0000, 0xc840, 0x0000, FAIL_MUL_HARD_20)
TEST_MUL_FPU(0x0000, 0xc100, 0x0000, FAIL_MUL_HARD_21)
TEST_MUL_FPU(0x0000, 0x0000, 0x0000, FAIL_MUL_HARD_22)
TEST_MUL_FPU(0x0000, 0x3d00, 0x0000, FAIL_MUL_HARD_23)
TEST_MUL_FPU(0x0000, 0x4220, 0x0000, FAIL_MUL_HARD_24)
TEST_MUL_FPU(0x3d00, 0xcc00, 0xcd00, FAIL_MUL_HARD_25)
TEST_MUL_FPU(0x3d00, 0xc840, 0xc950, FAIL_MUL_HARD_26)
TEST_MUL_FPU(0x3d00, 0xc100, 0xc240, FAIL_MUL_HARD_27)
TEST_MUL_FPU(0x3d00, 0x0000, 0x0000, FAIL_MUL_HARD_28)
TEST_MUL_FPU(0x3d00, 0x3d00, 0x3e40, FAIL_MUL_HARD_29)
TEST_MUL_FPU(0x3d00, 0x4220, 0x43a8, FAIL_MUL_HARD_30)
TEST_MUL_FPU(0x4220, 0xcc00, 0xd220, FAIL_MUL_HARD_31)
TEST_MUL_FPU(0x4220, 0xc840, 0xce82, FAIL_MUL_HARD_32)
TEST_MUL_FPU(0x4220, 0xc100, 0xc7a8, FAIL_MUL_HARD_33)
TEST_MUL_FPU(0x4220, 0x0000, 0x0000, FAIL_MUL_HARD_34)
TEST_MUL_FPU(0x4220, 0x3d00, 0x43a8, FAIL_MUL_HARD_35)
TEST_MUL_FPU(0x4220, 0x4220, 0x48b0, FAIL_MUL_HARD_36)
#endif

jmp END

FAILED:
    arsh reg[0], reg[0], reg[0]
END:
    int 0



